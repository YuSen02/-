题目：给你一个数组 nums 。数组「动态和」的计算公式为：runningSum[i] = sum(nums[0]…nums[i]) 。

请返回 nums 的动态和。

 

示例 1：

输入：nums = [1,2,3,4]
输出：[1,3,6,10]
解释：动态和计算过程为 [1, 1+2, 1+2+3, 1+2+3+4] 。
示例 2：

输入：nums = [1,1,1,1,1]
输出：[1,2,3,4,5]
解释：动态和计算过程为 [1, 1+1, 1+1+1, 1+1+1+1, 1+1+1+1+1] 。
示例 3：

输入：nums = [3,1,2,10,1]
输出：[3,4,6,16,17]
 

提示：

1 <= nums.length <= 1000
-10^6 <= nums[i] <= 10^6

题解
根据题意，其实就是求由数组的前面项元素的和再加上本项元素组成的元素的数组。

Show me the Code

int* runningSum(int* nums, int numsSize, int* returnSize){
    if (nums == NULL || numsSize <= 0) {
        *returnSize = 0;
        return NULL;
    }

    int *sum = (int *)malloc(numsSize * sizeof(int));
    if (sum == NULL) {
        return NULL;
    }

    int k = 0;
    for (int i = 0; i < numsSize; ++i) {
        k += nums[i];
        sum[i] = k;
    }

    *returnSize = numsSize;
    return sum;
}
