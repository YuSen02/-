#include<stdio.h>
 
struct point
{
    double x,y;
};
 
double direction( point p1,point p2,point p )
{
    return ( p1.x -p.x )*( p2.y-p.y) -  ( p2.x -p.x )*( p1.y-p.y)   ;
}
 
int on_segment( point p1,point p2 ,point p )
{
    double max=p1.x > p2.x ? p1.x : p2.x ;
    double min =p1.x < p2.x ? p1.x : p2.x ;
 
    if( p.x >=min && p.x <=max )
        return 1;
    else
        return 0;
}
 
int segments_intersert( point p1,point p2,point p3,point p4 )
{
    double d1,d2,d3,d4;
    d1 = direction ( p1,p2,p3 );
    d2 = direction ( p1,p2,p4 );
    d3 = direction ( p3,p4,p1 );
    d4 = direction ( p3,p4,p2 );
    if( d1*d2<0 && d3*d4<0 )
        return 1;
    else if( d1==0 && on_segment( p1,p2,p3 ) )
        return 1;
    else if( d2==0 && on_segment( p1,p2,p4 ) )
        return 1;
    else if( d3==0 && on_segment( p3,p4,p1 ) )
        return 1;
    else if( d4==0 && on_segment( p3,p4,p2 ) )
        return 1;
 
    return 0;
}
 
int main()
{
    int n,i,j,num;
    point begin[105],end[105];
 
    while( scanf("%d",&n) && n!=0 )
    {
        num=0;
        for( i=0;i<n;i++)
        {
            scanf("%lf %lf %lf %lf",&begin[i].x ,&begin[i].y ,&end[i].x ,&end[i].y );
        }
        for( i=0;i<n;i++)
            for(j=i+1;j<n;j++)
                {
                    if( segments_intersert( begin[i],end[i],begin[j],end[j] ) )
                        num++;
                }
        printf("%d\n",num);
    }
    return 0;
}
