题目：给你一个整数数组 arr 。

现需要从数组中取三个下标 i、j 和 k ，其中 (0 <= i < j <= k < arr.length) 。

a 和 b 定义如下：

a = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]
b = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]
注意：^ 表示 按位异或 操作。

请返回能够令 a == b 成立的三元组 (i, j , k) 的数目。

 

示例 1：

输入：arr = [2,3,1,6,7]
输出：4
解释：满足题意的三元组分别是 (0,1,2), (0,2,2), (2,3,4) 以及 (2,4,4)
示例 2：

输入：arr = [1,1,1,1,1]
输出：10
示例 3：

输入：arr = [2,3]
输出：0
示例 4：

输入：arr = [1,3,5,7,9]
输出：3
示例 5：

输入：arr = [7,11,12,9,5,2,7,17,22]
输出：8

解题思路
1、首先A⊕B=A⊕C，可得B=C（自己百度） ==> 因此a ^ arr[j] = b ^ arr[j] 可得 a = b;
然后直接看代码

代码


int countTriplets(int* arr, int arrSize){
    int cnt = 0;
    for (int i = 0; i < arrSize; i++) {
        int a = arr[i];
        for (int j = i + 1; j < arrSize; j++) {
            a ^= arr[j];    // a = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]^ arr[j]
            int b = arr[j];
            for (int k = j; k < arrSize; k++) { 
                b ^= arr[k];  // b = arr[j] ^ arr[j] ^ arr[j + 1] ^ ... ^ arr[k]
                if (a == b) {
                    cnt++;
                }
            }
        }
    }
    return cnt;
}

